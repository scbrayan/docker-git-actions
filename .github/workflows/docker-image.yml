name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  buildx:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        mayor_pattern: "mayor:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    - name: BuildX Instalation
      run: |
        docker buildx create --name mybuilder --driver docker-container --bootstrap
        docker buildx use mybuilder
    - name: Build with BuildX and Push
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 -t brayanvip/graphql:$NEW_VERSION --push .
        docker buildx build --platform linux/amd64,linux/arm64 -t brayanvip/graphql:latest --push .
#     - name: Build Docker Image
#       env:
#         NEW_VERSION: ${{ steps.version.outputs.version }}
#       run: |
#         docker build -t brayanvip/graphql:$NEW_VERSION .
#         docker build -t brayanvip/graphql:latest .
#     - name: Push Docker Image
#       env:
#         NEW_VERSION: ${{ steps.version.outputs.version }}
#       run: |
#         docker push brayanvip/graphql:$NEW_VERSION
#         docker push brayanvip/graphql:latest
